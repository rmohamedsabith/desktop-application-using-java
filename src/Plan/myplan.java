/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Plan;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

import Registration.*;
import loginform.*;
import Hospital.*;
import Rent.*;
import Home.*;
import JDBC.DbConnection;
/**
 *
 * @author User
 */
public class myplan extends javax.swing.JFrame {

    /**
     * Creates new form background
     */
    DefaultTableModel model, model1;

    public myplan() {
        initComponents();

        model = (DefaultTableModel) tblresult.getModel();
        model1 = (DefaultTableModel) tblsearch.getModel();
        radioyes.setActionCommand("YES");
        radiono.setActionCommand("NO");
        thead();
        jScrollPane5.getVerticalScrollBar().setUnitIncrement(20);

    }

    class jPanelGradient extends JPanel {

        protected void paintComponent(Graphics g) {
            Graphics2D g2d = (Graphics2D) g;
            int w = getWidth();
            int h = getHeight();

//            Color color1=new Color(52,143,80);
//            Color color2=new Color(86,180,211);
            Color color1 = new Color(46, 40, 110);
            Color color2 = new Color(54, 113, 160);

            GradientPaint gp = new GradientPaint(0, 0, color1, 180, h, color2);
            g2d.setPaint(gp);
            g2d.fillRect(0, 0, w, h);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnreminder = new javax.swing.ButtonGroup();
        timePicker2 = new com.raven.swing.TimePicker();
        pnldashboard = new javax.swing.JPanel();
        lbllogo = new javax.swing.JLabel();
        lblsublogo = new javax.swing.JLabel();
        lblborder = new javax.swing.JLabel();
        pnlhome = new javax.swing.JPanel();
        iconhome = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pnlhospital = new javax.swing.JPanel();
        iconhospitals = new javax.swing.JLabel();
        lblhospitals = new javax.swing.JLabel();
        pnlplan = new javax.swing.JPanel();
        iconplan = new javax.swing.JLabel();
        lblplan = new javax.swing.JLabel();
        pnlregistration = new javax.swing.JPanel();
        iconregistration = new javax.swing.JLabel();
        lblregistration = new javax.swing.JLabel();
        pnllogout = new javax.swing.JPanel();
        iconlogout = new javax.swing.JLabel();
        lbllogout = new javax.swing.JLabel();
        pnlback = new javax.swing.JPanel();
        iconback = new javax.swing.JLabel();
        lblbottom = new javax.swing.JLabel();
        pnlforward = new javax.swing.JPanel();
        lblforward = new javax.swing.JLabel();
        pnlrent = new javax.swing.JPanel();
        iconrent1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        iconlogo = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        frameplan = new javax.swing.JPanel();
        comdistrict = new javax.swing.JComboBox<>();
        comoption = new javax.swing.JComboBox<>();
        lbldate = new javax.swing.JLabel();
        lbltime = new javax.swing.JLabel();
        txttime = new javax.swing.JTextField();
        lbloption = new javax.swing.JLabel();
        txtoption = new javax.swing.JTextField();
        lblpurpose = new javax.swing.JLabel();
        lblreminder = new javax.swing.JLabel();
        radioyes = new javax.swing.JRadioButton();
        radiono = new javax.swing.JRadioButton();
        btnsearch = new swing.buttonGradient();
        btnclear = new swing.buttonGradient();
        btnupdate = new swing.buttonGradient();
        btndelete = new swing.buttonGradient();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblsearch = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblresult = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtareafile = new javax.swing.JTextArea();
        btnsave = new swing.buttonGradient();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtareapurpose = new javax.swing.JTextArea();
        btnclearall = new swing.buttonGradient();
        btnmktext = new swing.buttonGradient();
        btnsendemail = new swing.buttonGradient();
        txtcalander = new com.toedter.calendar.JDateChooser();
        pnlhead = new javax.swing.JPanel();
        jPanel2 = new jPanelGradient();
        lblhead2 = new javax.swing.JLabel();
        lblolanline1 = new javax.swing.JLabel();
        lblhead3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnldashboard.setBackground(new java.awt.Color(54, 33, 89));
        pnldashboard.setPreferredSize(new java.awt.Dimension(310, 600));

        lbllogo.setBackground(new java.awt.Color(25, 151, 148));
        lbllogo.setFont(new java.awt.Font("Source Code Pro Black", 1, 28)); // NOI18N
        lbllogo.setForeground(new java.awt.Color(255, 255, 255));
        lbllogo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbllogo.setText("HOLIDAY HELPER...");

        lblsublogo.setBackground(new java.awt.Color(25, 151, 148));
        lblsublogo.setFont(new java.awt.Font("Tw Cen MT Condensed", 3, 18)); // NOI18N
        lblsublogo.setForeground(new java.awt.Color(255, 255, 255));
        lblsublogo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblsublogo.setText("--FLY SRILANKA--");

        lblborder.setBackground(new java.awt.Color(255, 255, 255));
        lblborder.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        lblborder.setPreferredSize(new java.awt.Dimension(2, 2));

        pnlhome.setBackground(new java.awt.Color(85, 65, 118));
        pnlhome.setForeground(new java.awt.Color(255, 255, 255));
        pnlhome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlhomeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlhomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlhomeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlhomeMousePressed(evt);
            }
        });
        pnlhome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iconhome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconhome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Plan/Photos/home.png"))); // NOI18N
        pnlhome.add(iconhome, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 60, 50));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Home");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });
        pnlhome.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 170, 30));

        pnlhospital.setBackground(new java.awt.Color(64, 43, 100));
        pnlhospital.setForeground(new java.awt.Color(255, 255, 255));
        pnlhospital.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlhospitalMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlhospitalMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlhospitalMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlhospitalMousePressed(evt);
            }
        });
        pnlhospital.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iconhospitals.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconhospitals.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Plan/Photos/hospitals.png"))); // NOI18N
        pnlhospital.add(iconhospitals, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 60, 50));

        lblhospitals.setBackground(new java.awt.Color(255, 255, 255));
        lblhospitals.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lblhospitals.setForeground(new java.awt.Color(255, 255, 255));
        lblhospitals.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblhospitals.setText("Hospitals");
        lblhospitals.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblhospitalsMousePressed(evt);
            }
        });
        pnlhospital.add(lblhospitals, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 170, 30));

        pnlplan.setBackground(new java.awt.Color(64, 43, 100));
        pnlplan.setForeground(new java.awt.Color(255, 255, 255));
        pnlplan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlplanMousePressed(evt);
            }
        });
        pnlplan.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iconplan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconplan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Plan/Photos/plan.png"))); // NOI18N
        pnlplan.add(iconplan, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 60, 40));

        lblplan.setBackground(new java.awt.Color(255, 255, 255));
        lblplan.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lblplan.setForeground(new java.awt.Color(255, 255, 255));
        lblplan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblplan.setText("Make My Plan");
        pnlplan.add(lblplan, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 170, 30));

        pnlregistration.setBackground(new java.awt.Color(64, 43, 100));
        pnlregistration.setForeground(new java.awt.Color(255, 255, 255));
        pnlregistration.setPreferredSize(new java.awt.Dimension(270, 50));
        pnlregistration.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlregistrationMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlregistrationMousePressed(evt);
            }
        });
        pnlregistration.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iconregistration.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconregistration.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Plan/Photos/registration.png"))); // NOI18N
        pnlregistration.add(iconregistration, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 60, 30));

        lblregistration.setBackground(new java.awt.Color(255, 255, 255));
        lblregistration.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lblregistration.setForeground(new java.awt.Color(255, 255, 255));
        lblregistration.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblregistration.setText("Registration");
        pnlregistration.add(lblregistration, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 170, 20));

        pnllogout.setBackground(new java.awt.Color(64, 43, 100));
        pnllogout.setForeground(new java.awt.Color(255, 255, 255));
        pnllogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnllogoutMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnllogoutMousePressed(evt);
            }
        });
        pnllogout.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iconlogout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconlogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Plan/Photos/logout.png"))); // NOI18N
        pnllogout.add(iconlogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 60, 40));

        lbllogout.setBackground(new java.awt.Color(255, 255, 255));
        lbllogout.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lbllogout.setForeground(new java.awt.Color(255, 255, 255));
        lbllogout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbllogout.setText("Log Out");
        lbllogout.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        pnllogout.add(lbllogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 170, 30));

        pnlback.setBackground(new java.awt.Color(64, 43, 100));
        pnlback.setForeground(new java.awt.Color(255, 255, 255));
        pnlback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlbackMousePressed(evt);
            }
        });
        pnlback.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iconback.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Plan/Photos/back.png"))); // NOI18N
        pnlback.add(iconback, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 60, 50));

        lblbottom.setBackground(new java.awt.Color(255, 255, 255));
        lblbottom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        lblbottom.setPreferredSize(new java.awt.Dimension(2, 2));

        pnlforward.setBackground(new java.awt.Color(64, 43, 100));
        pnlforward.setForeground(new java.awt.Color(255, 255, 255));
        pnlforward.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlforwardMousePressed(evt);
            }
        });
        pnlforward.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblforward.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblforward.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Plan/Photos/forward.png"))); // NOI18N
        pnlforward.add(lblforward, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 60, 50));

        pnlrent.setBackground(new java.awt.Color(64, 43, 100));
        pnlrent.setForeground(new java.awt.Color(255, 255, 255));
        pnlrent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlrentMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlrentMousePressed(evt);
            }
        });
        pnlrent.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iconrent1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconrent1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Plan/Photos/rent.png"))); // NOI18N
        pnlrent.add(iconrent1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 60, 40));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Rent Vehicles");
        pnlrent.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 170, 30));

        iconlogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconlogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/travel.png"))); // NOI18N

        javax.swing.GroupLayout pnldashboardLayout = new javax.swing.GroupLayout(pnldashboard);
        pnldashboard.setLayout(pnldashboardLayout);
        pnldashboardLayout.setHorizontalGroup(
            pnldashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlhome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlhospital, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlregistration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnldashboardLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblsublogo, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
            .addGroup(pnldashboardLayout.createSequentialGroup()
                .addGroup(pnldashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnldashboardLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnldashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbllogo, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iconlogo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblbottom, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(pnlrent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnldashboardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnldashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlplan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnllogout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnldashboardLayout.createSequentialGroup()
                        .addComponent(pnlback, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlforward, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnldashboardLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblborder, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnldashboardLayout.setVerticalGroup(
            pnldashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnldashboardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iconlogo, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbllogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblsublogo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblborder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlhome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlhospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlrent, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlregistration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlplan, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnllogout, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(pnldashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlback, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlforward, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblbottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );

        jScrollPane5.setBorder(null);
        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane5.setPreferredSize(new java.awt.Dimension(1230, 630));

        frameplan.setBackground(new java.awt.Color(160, 161, 194));
        frameplan.setPreferredSize(new java.awt.Dimension(1190, 1930));

        comdistrict.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        comdistrict.setForeground(new java.awt.Color(0, 102, 102));
        comdistrict.setMaximumRowCount(26);
        comdistrict.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a District", "Colombo", "Gampaha", "Kalutara", "Kandy", "Matale", "Nuwara Eliya", "Galle", "Matara", "Hambantota", "Jaffna", "Kilinochchi[1]", "Mannar", "Vavuniya", "Mullaitivu", "Batticaloa", "Ampara", "Trincomalee", "Kurunegala", "Puttalam", "Anuradhapura", "Polonnaruwa", "Badulla", "Moneragala", "Ratnapura", " Kegalle" }));
        comdistrict.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comdistrict.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        comdistrict.setName(""); // NOI18N

        comoption.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        comoption.setForeground(new java.awt.Color(0, 102, 102));
        comoption.setMaximumRowCount(4);
        comoption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a Option", "Hotels", "Places", "Resturants" }));
        comoption.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comoption.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        comoption.setName(""); // NOI18N
        comoption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comoptionActionPerformed(evt);
            }
        });

        lbldate.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lbldate.setForeground(new java.awt.Color(51, 51, 0));
        lbldate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbldate.setText("Date");

        lbltime.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lbltime.setForeground(new java.awt.Color(51, 51, 0));
        lbltime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltime.setText("Time");

        txttime.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txttime.setForeground(new java.awt.Color(0, 102, 102));
        txttime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txttime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txttimeMouseClicked(evt);
            }
        });
        txttime.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                txttimeComponentShown(evt);
            }
        });
        txttime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttimeActionPerformed(evt);
            }
        });
        txttime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txttimeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txttimeKeyTyped(evt);
            }
        });

        lbloption.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lbloption.setForeground(new java.awt.Color(51, 51, 0));
        lbloption.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbloption.setText("Option");

        txtoption.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtoption.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtoption.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtoptionMouseClicked(evt);
            }
        });
        txtoption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtoptionActionPerformed(evt);
            }
        });

        lblpurpose.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblpurpose.setForeground(new java.awt.Color(51, 51, 0));
        lblpurpose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblpurpose.setText("Purpose");

        lblreminder.setFont(new java.awt.Font("Trebuchet MS", 1, 16)); // NOI18N
        lblreminder.setForeground(new java.awt.Color(51, 51, 0));
        lblreminder.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblreminder.setText("Reminder");

        radioyes.setBackground(new java.awt.Color(160, 161, 194));
        btnreminder.add(radioyes);
        radioyes.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        radioyes.setForeground(new java.awt.Color(51, 51, 0));
        radioyes.setSelected(true);
        radioyes.setText("YES");
        radioyes.setFocusPainted(false);
        radioyes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioyesActionPerformed(evt);
            }
        });

        radiono.setBackground(new java.awt.Color(160, 161, 194));
        btnreminder.add(radiono);
        radiono.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        radiono.setForeground(new java.awt.Color(51, 51, 0));
        radiono.setText("NO");
        radiono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radionoActionPerformed(evt);
            }
        });

        btnsearch.setText("Search");
        btnsearch.setColor1(new java.awt.Color(0, 153, 153));
        btnsearch.setColor2(new java.awt.Color(0, 153, 0));
        btnsearch.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        btnsearch.setIconTextGap(5);
        btnsearch.setMultiClickThreshhold(10L);
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });

        btnclear.setText("Clear");
        btnclear.setColor1(new java.awt.Color(0, 153, 153));
        btnclear.setColor2(new java.awt.Color(0, 153, 0));
        btnclear.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        btnupdate.setText("Update");
        btnupdate.setColor1(new java.awt.Color(0, 153, 153));
        btnupdate.setColor2(new java.awt.Color(0, 153, 0));
        btnupdate.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btndelete.setText("Delete");
        btndelete.setColor1(new java.awt.Color(0, 153, 153));
        btndelete.setColor2(new java.awt.Color(0, 153, 0));
        btndelete.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        tblsearch.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tblsearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "E-mail", "Contact", "Website"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblsearch.setCellSelectionEnabled(true);
        tblsearch.setGridColor(new java.awt.Color(255, 255, 255));
        tblsearch.setIntercellSpacing(new java.awt.Dimension(5, 5));
        tblsearch.setRowHeight(25);
        tblsearch.setSelectionBackground(new java.awt.Color(122, 72, 221));
        tblsearch.setVerifyInputWhenFocusTarget(false);
        tblsearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblsearchMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblsearch);

        tblresult.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tblresult.setForeground(new java.awt.Color(0, 0, 153));
        tblresult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "District", "Option", "Name of  option", "Purpose", "Reminder"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        }

    );
    tblresult.setGridColor(new java.awt.Color(255, 255, 255));
    tblresult.setInheritsPopupMenu(true);
    tblresult.setRowHeight(30);
    tblresult.setRowMargin(10);
    tblresult.setSelectionBackground(new java.awt.Color(122, 72, 221));
    tblresult.setShowGrid(true);
    tblresult.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tblresultMouseClicked(evt);
        }
        public void mousePressed(java.awt.event.MouseEvent evt) {
            tblresultMousePressed(evt);
        }
    });
    tblresult.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            tblresultKeyTyped(evt);
        }
    });
    jScrollPane3.setViewportView(tblresult);

    txtareafile.setColumns(20);
    txtareafile.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
    txtareafile.setRows(5);
    txtareafile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    txtareafile.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            txtareafileKeyPressed(evt);
        }
    });
    jScrollPane4.setViewportView(txtareafile);

    btnsave.setText("Save");
    btnsave.setColor1(new java.awt.Color(0, 153, 153));
    btnsave.setColor2(new java.awt.Color(0, 153, 0));
    btnsave.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
    btnsave.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnsaveActionPerformed(evt);
        }
    });

    txtareapurpose.setColumns(20);
    txtareapurpose.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
    txtareapurpose.setForeground(new java.awt.Color(0, 102, 102));
    txtareapurpose.setRows(5);
    txtareapurpose.setAutoscrolls(false);
    txtareapurpose.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
    jScrollPane2.setViewportView(txtareapurpose);

    btnclearall.setText("Clear All");
    btnclearall.setColor1(new java.awt.Color(0, 153, 153));
    btnclearall.setColor2(new java.awt.Color(0, 153, 0));
    btnclearall.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
    btnclearall.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnclearallActionPerformed(evt);
        }
    });

    btnmktext.setText("Make Text File");
    btnmktext.setColor1(new java.awt.Color(0, 153, 153));
    btnmktext.setColor2(new java.awt.Color(0, 153, 0));
    btnmktext.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
    btnmktext.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnmktextActionPerformed(evt);
        }
    });

    btnsendemail.setText("Send To My Mail");
    btnsendemail.setColor1(new java.awt.Color(0, 153, 153));
    btnsendemail.setColor2(new java.awt.Color(0, 153, 0));
    btnsendemail.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
    btnsendemail.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnsendemailActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout frameplanLayout = new javax.swing.GroupLayout(frameplan);
    frameplan.setLayout(frameplanLayout);
    frameplanLayout.setHorizontalGroup(
        frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(frameplanLayout.createSequentialGroup()
            .addGap(83, 83, 83)
            .addGroup(frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(frameplanLayout.createSequentialGroup()
                    .addComponent(lblreminder, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txttime, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(frameplanLayout.createSequentialGroup()
                            .addGap(16, 16, 16)
                            .addComponent(radioyes, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(256, 256, 256)
                    .addComponent(radiono, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
            .addGroup(frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(frameplanLayout.createSequentialGroup()
                    .addComponent(lblpurpose, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(frameplanLayout.createSequentialGroup()
                    .addComponent(lbloption, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(txtoption, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))))
        .addGroup(frameplanLayout.createSequentialGroup()
            .addGap(94, 94, 94)
            .addComponent(btnclearall, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnmktext, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(257, 257, 257))
        .addGroup(frameplanLayout.createSequentialGroup()
            .addGroup(frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(frameplanLayout.createSequentialGroup()
                    .addGap(431, 431, 431)
                    .addComponent(btnsendemail, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(frameplanLayout.createSequentialGroup()
                        .addGap(347, 347, 347)
                        .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)
                        .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125)
                        .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(frameplanLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbltime, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(frameplanLayout.createSequentialGroup()
                                .addComponent(lbldate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(txtcalander, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 994, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(frameplanLayout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(frameplanLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 995, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frameplanLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(comdistrict, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comoption, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(144, 144, 144)
                        .addComponent(btnsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    frameplanLayout.setVerticalGroup(
        frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(frameplanLayout.createSequentialGroup()
            .addGap(76, 76, 76)
            .addGroup(frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(comoption, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(comdistrict, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(29, 29, 29)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(57, 57, 57)
            .addGroup(frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbloption, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtoption, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(lbldate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                .addComponent(txtcalander, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(frameplanLayout.createSequentialGroup()
                    .addGap(51, 51, 51)
                    .addGroup(frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbltime, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txttime, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(49, 49, 49)
                    .addGroup(frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblreminder, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(radioyes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(radiono)))
                .addGroup(frameplanLayout.createSequentialGroup()
                    .addGap(57, 57, 57)
                    .addGroup(frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblpurpose, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGap(152, 152, 152)
            .addGroup(frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(23, 23, 23)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(frameplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnclearall, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnmktext, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btnsendemail, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(47, Short.MAX_VALUE))
    );

    jScrollPane5.setViewportView(frameplan);

    pnlhead.setBackground(new java.awt.Color(160, 161, 194));
    pnlhead.setPreferredSize(new java.awt.Dimension(1240, 170));

    jPanel2.setPreferredSize(new java.awt.Dimension(1190, 100));

    lblhead2.setFont(new java.awt.Font("Source Serif Pro Semibold", 1, 32)); // NOI18N
    lblhead2.setForeground(new java.awt.Color(255, 255, 255));
    lblhead2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    lblhead2.setText("MAKE MY PLAN");

    lblolanline1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(249, 227, 69), 3, true));

    lblhead3.setFont(new java.awt.Font("Source Serif Pro Semibold", 1, 32)); // NOI18N
    lblhead3.setForeground(new java.awt.Color(255, 255, 0));
    lblhead3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    lblhead3.setText("....");

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGap(51, 51, 51)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblolanline1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(lblhead2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lblhead3)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGap(32, 32, 32)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblhead2, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(lblhead3))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblolanline1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    javax.swing.GroupLayout pnlheadLayout = new javax.swing.GroupLayout(pnlhead);
    pnlhead.setLayout(pnlheadLayout);
    pnlheadLayout.setHorizontalGroup(
        pnlheadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1244, Short.MAX_VALUE)
    );
    pnlheadLayout.setVerticalGroup(
        pnlheadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlheadLayout.createSequentialGroup()
            .addContainerGap(43, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(27, 27, 27))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(pnldashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1244, Short.MAX_VALUE)
                .addComponent(pnlhead, javax.swing.GroupLayout.DEFAULT_SIZE, 1244, Short.MAX_VALUE))
            .addGap(96, 96, 96))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addComponent(pnldashboard, javax.swing.GroupLayout.DEFAULT_SIZE, 815, Short.MAX_VALUE)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(pnlhead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseEntered

    }//GEN-LAST:event_jLabel2MouseEntered

    private void pnlhomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlhomeMouseEntered
        // TODO add your handling code here:
        //setColor(pnlhome);

    }//GEN-LAST:event_pnlhomeMouseEntered

    private void pnlhomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlhomeMouseExited
        //resetColor(pnlhome);
    }//GEN-LAST:event_pnlhomeMouseExited

    private void pnlhomeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlhomeMousePressed
        // TODO add your handling code here:
        setColor(pnlhome);
        resetColor(pnlback);
        resetColor(pnlforward);
        resetColor(pnlhospital);
        resetColor(pnllogout);
        resetColor(pnlregistration);
        resetColor(pnlplan);
        resetColor(pnlrent);
    }//GEN-LAST:event_pnlhomeMousePressed

    private void pnlhospitalMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlhospitalMousePressed
        // TODO add your handling code here:
        resetColor(pnlhome);
        resetColor(pnlback);
        resetColor(pnlforward);
        setColor(pnlhospital);
        resetColor(pnllogout);
        resetColor(pnlregistration);
        resetColor(pnlplan);
        resetColor(pnlrent);
    }//GEN-LAST:event_pnlhospitalMousePressed

    private void pnlhospitalMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlhospitalMouseEntered
        // TODO add your handling code here:

        // setColor(pnlhospital);
    }//GEN-LAST:event_pnlhospitalMouseEntered

    private void pnlhospitalMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlhospitalMouseExited
        // TODO add your handling code here:
        // resetColor(pnlhospital);
    }//GEN-LAST:event_pnlhospitalMouseExited

    private void pnlhomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlhomeMouseClicked
        // TODO add your handling code here:
        Homepg obj = new Homepg();
        obj.setVisible(true);
        setVisible(false);
        
    }//GEN-LAST:event_pnlhomeMouseClicked

    private void pnlhospitalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlhospitalMouseClicked
        // TODO add your handling code here:
        myplan1 obj = new myplan1();
        obj.setVisible(true);
        setVisible(false);
        
    }//GEN-LAST:event_pnlhospitalMouseClicked

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_jLabel2MousePressed

    private void lblhospitalsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblhospitalsMousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_lblhospitalsMousePressed

    private void pnlplanMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlplanMousePressed
        // TODO add your handling code here:
        resetColor(pnlhome);
        resetColor(pnlback);
        resetColor(pnlforward);
        resetColor(pnlhospital);
        resetColor(pnllogout);
        resetColor(pnlregistration);
        resetColor(pnlplan);
        setColor(pnlplan);
        resetColor(pnlrent);
    }//GEN-LAST:event_pnlplanMousePressed

    private void pnlregistrationMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlregistrationMousePressed
        // TODO add your handling code here:
        resetColor(pnlhome);
        resetColor(pnlback);
        resetColor(pnlforward);
        resetColor(pnlhospital);
        resetColor(pnllogout);
        setColor(pnlregistration);
        resetColor(pnlplan);
        resetColor(pnlrent);

        frameplan.setVisible(true);
    }//GEN-LAST:event_pnlregistrationMousePressed

    private void pnllogoutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnllogoutMousePressed
        // TODO add your handling code here:
        resetColor(pnlhome);
        resetColor(pnlback);
        resetColor(pnlforward);
        resetColor(pnlhospital);
        setColor(pnllogout);
        resetColor(pnlregistration);
        resetColor(pnlplan);
        resetColor(pnlrent);
    }//GEN-LAST:event_pnllogoutMousePressed

    private void pnlrentMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlrentMousePressed
        // TODO add your handling code here:
        resetColor(pnlhome);
        resetColor(pnlback);
        resetColor(pnlforward);
        resetColor(pnlhospital);
        resetColor(pnllogout);
        resetColor(pnlregistration);
        resetColor(pnlplan);
        setColor(pnlrent);
    }//GEN-LAST:event_pnlrentMousePressed

    private void pnlbackMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlbackMousePressed
        // TODO add your handling code here:
        resetColor(pnlhome);
        setColor(pnlback);
        resetColor(pnlforward);
        resetColor(pnlhospital);
        resetColor(pnllogout);
        resetColor(pnlregistration);
        resetColor(pnlplan);
        resetColor(pnlrent);
    }//GEN-LAST:event_pnlbackMousePressed

    private void pnlforwardMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlforwardMousePressed
        // TODO add your handling code here:
        resetColor(pnlhome);
        resetColor(pnlback);
        setColor(pnlforward);
        resetColor(pnlhospital);
        resetColor(pnllogout);
        resetColor(pnlregistration);
        resetColor(pnlplan);
        resetColor(pnlrent);
    }//GEN-LAST:event_pnlforwardMousePressed

    private void btnnextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnextActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnnextActionPerformed

    private void comoptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comoptionActionPerformed
        // TODO add your handling code here:
        lbloption.setText(comoption.getSelectedItem().toString());
        txtoption.setEditable(false);
    }//GEN-LAST:event_comoptionActionPerformed

    private void txttimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txttimeMouseClicked
        // TODO add your handling code here:
        timePicker2.showPopup(this, 600, 350);
    }//GEN-LAST:event_txttimeMouseClicked

    private void txttimeComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_txttimeComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_txttimeComponentShown

    private void txttimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttimeActionPerformed

    private void txttimeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttimeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttimeKeyPressed

    private void txttimeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttimeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txttimeKeyTyped

    private void txtoptionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtoptionMouseClicked
        // TODO add your handling code here:
        txtoption.setEditable(false);
    }//GEN-LAST:event_txtoptionMouseClicked

    private void txtoptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtoptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtoptionActionPerformed

    private void radioyesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioyesActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_radioyesActionPerformed

    private void radionoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radionoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radionoActionPerformed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        // TODO add your handling code here:

        String district = comdistrict.getSelectedItem().toString();
        String option = comoption.getSelectedItem().toString();

        try {
            DbConnection l = new DbConnection();   
            
            Class.forName(l.getDrive_class());
            
            Connection con = DriverManager.getConnection(l.getUrl(), l.getUsername(), l.getPassword());
            String sql = "select name,email,contact,website from websites where district ='" + district + "'" + "and types ='" + option + "'";

            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            ResultSetMetaData rss = rs.getMetaData();
            int c = rss.getColumnCount();

            String name, email, conatct, website;
            while (rs.next()) {
                name = rs.getString(1);
                email = rs.getString(2);
                conatct = rs.getString(3);
                website = rs.getString(4);
                String[] row = {name, email, conatct, website};
                model1.addRow(row);

            }
            try {
                int i = tblsearch.getRowCount();
                for (int j = 0; j < i - 1; j++) {
                    model1.removeRow(j);
                }

            } catch (Exception e) {
                System.out.println(e);
            }

            stm.close();
            con.close();
        } catch (SQLException ex) {
            System.out.println("sql error");
            Logger.getLogger(myplan.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            System.out.println("class not found");
            Logger.getLogger(myplan.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnsearchActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        // TODO add your handling code here:
        clearFields();
        btnsave.setVisible(true);
    }//GEN-LAST:event_btnclearActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
        if (tblresult.getSelectedRowCount() == 1) {
            SimpleDateFormat dateformat = new SimpleDateFormat("yyyy - MM - dd");
            model.setValueAt(dateformat.format(txtcalander.getDate()), tblresult.getSelectedRow(), 0);
            model.setValueAt(txttime.getText(), tblresult.getSelectedRow(), 1);
            model.setValueAt(comdistrict.getSelectedItem(), tblresult.getSelectedRow(), 2);
            model.setValueAt(comoption.getSelectedItem(), tblresult.getSelectedRow(), 3);
            model.setValueAt(txtoption.getText(), tblresult.getSelectedRow(), 4);
            model.setValueAt(txtareapurpose.getText(), tblresult.getSelectedRow(), 5);
            model.setValueAt(btnreminder.getSelection().getActionCommand(), tblresult.getSelectedRow(), 6);

            JOptionPane.showMessageDialog(this, "Successfuly Updated...");
            txtareapurpose.setText("");
            txtoption.setText("");
            txttime.setText("");
            btnreminder.clearSelection();
            comoption.setSelectedItem(0);
            int i = tblsearch.getRowCount();
            for (int j = 0; j < i; j++) {
                model1.removeRow(j);
            }
        }
        sort();
        btnsave.setVisible(true);

    }//GEN-LAST:event_btnupdateActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        if (tblresult.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "now row selected");
        } else {
            model.removeRow(tblresult.getSelectedRow());
        }
        clearFields();
        btnsave.setVisible(true);
    }//GEN-LAST:event_btndeleteActionPerformed

    private void tblresultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblresultMouseClicked
        try {
            // TODO add your handling code here:
            txtcalander.setDate(new SimpleDateFormat("yyyy - MM - dd").parse(model.getValueAt(tblresult.getSelectedRow(), 0).toString()));
        } catch (ParseException ex) {
            Logger.getLogger(myplan.class.getName()).log(Level.SEVERE, null, ex);
        }
        txttime.setText(model.getValueAt(tblresult.getSelectedRow(), 1).toString());
        String district = model.getValueAt(tblresult.getSelectedRow(), 2).toString();
        lbloption.setText(model.getValueAt(tblresult.getSelectedRow(), 3).toString());
        String option = model.getValueAt(tblresult.getSelectedRow(), 3).toString();
        txtoption.setText(model.getValueAt(tblresult.getSelectedRow(), 4).toString());
        txtareapurpose.setText(model.getValueAt(tblresult.getSelectedRow(), 5).toString());
        String reminder = model.getValueAt(tblresult.getSelectedRow(), 6).toString();

        if (reminder.equalsIgnoreCase("yes")) {
            radioyes.setSelected(true);
        } else {
            radiono.setSelected(true);
        }
        for (int i = 1; i <= 3; i++) {
            if (option.equals(comoption.getItemAt(i))) {
                comoption.setSelectedIndex(i);
                break;
            }
        }
        for (int i = 1; i < 26; i++) {
            if (district.equals(comdistrict.getItemAt(i))) {
                comdistrict.setSelectedIndex(i);
                break;
            }
        }

        btnsave.setVisible(false);
        if (tblresult.isEditing() == false) {
            JOptionPane.showMessageDialog(this, "Can not Edit ");

        }

    }//GEN-LAST:event_tblresultMouseClicked

    private void tblresultMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblresultMousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_tblresultMousePressed

    private void tblresultKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblresultKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_tblresultKeyTyped

    private void txtareafileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtareafileKeyPressed
        // TODO add your handling code here:
        txtareafile.setEditable(false);
    }//GEN-LAST:event_txtareafileKeyPressed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        addData();
        sort();
        txtcalander.grabFocus();
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnclearallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearallActionPerformed
        // TODO add your handling code here:
        int i = tblresult.getRowCount();
        for (int j = 0; j < i; j++) {
            model.removeRow(j);
        }
        btnmktext.doClick();
    }//GEN-LAST:event_btnclearallActionPerformed

    private void btnmktextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmktextActionPerformed
        // TODO add your handling code here:
        txtareafile.setText("\n\t\t\tMy Day Plan\n");
        txtareafile.setText(txtareafile.getText() + "=============================================================\n\n");
        try {
            txtareafile.setText(txtareafile.getText() + " District:- " + model.getValueAt(0, 2).toString() + "\t\t\t\t\tDate :- " + model.getValueAt(0, 0).toString() + "\n");
            int i = model.getRowCount();
            for (int j = 0; j < i; j++) {
                txtareafile.setText(txtareafile.getText() + "----------------------------------------------------------------------------------------------------\n\n");
                txtareafile.setText(txtareafile.getText() + " Time :- " + (model.getValueAt(j, 1).toString()) + " \n");
                txtareafile.setText(txtareafile.getText() + "\tName of the place :- " + model.getValueAt(j, 4).toString() + " \n");
                txtareafile.setText(txtareafile.getText() + "\t\tpurpose:- " + model.getValueAt(j, 5).toString() + "\n\n");
            }
            txtareafile.setText(txtareafile.getText() + "=============================================================\n");
            txtareafile.setText(txtareafile.getText() + "\t\t   CopyRight:- S2R Solution \n");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "There is no Row in the result ");
        }
    }//GEN-LAST:event_btnmktextActionPerformed


    private void tblsearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblsearchMouseClicked
        // TODO add your handling code here:
        int row = tblsearch.getSelectedRow();
        String name = model1.getValueAt(row, 0).toString();
        txtoption.setText(name);
        System.out.println(model1.getValueAt(row, 3));

        Desktop browser = Desktop.getDesktop();
        try {
            browser.browse(new URI(model1.getValueAt(row, 3).toString()));
        } catch (URISyntaxException e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this,e);
        } catch (IOException e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this,e);
        }

    }//GEN-LAST:event_tblsearchMouseClicked

    private void btnsendemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsendemailActionPerformed
        // TODO add your handling code here:
        new sendtomymail1().setVisible(true);
        new sendtomymail1().txtareafile2.setText(txtareafile.getText());
         System.out.println(txtareafile.getText()); 

    }//GEN-LAST:event_btnsendemailActionPerformed

    private void pnlrentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlrentMouseClicked
        // TODO add your handling code here:
        Rent1 obj = new Rent1();
        obj.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_pnlrentMouseClicked

    private void pnlregistrationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlregistrationMouseClicked
        // TODO add your handling code here:
        SignUp obj = new SignUp();
                obj.setVisible(true);
                setVisible(false);
    }//GEN-LAST:event_pnlregistrationMouseClicked

    private void pnllogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnllogoutMouseClicked
        // TODO add your handling code here:
        Login1 obj = new Login1();
        obj.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_pnllogoutMouseClicked

    public void setColor(JPanel panel) {
        panel.setBackground(new Color(85, 65, 118));

    }

    public void resetColor(JPanel panel) {
        panel.setBackground(new Color(64, 43, 100));
    }

    private void sort() {
        /* TableRowSorter<DefaultTableModel> sorter=new TableRowSorter<DefaultTableModel>(model);
        tblresult.setRowSorter(sorter);*/
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tblresult.getModel());
        tblresult.setRowSorter(sorter);
        ArrayList<RowSorter.SortKey> sortKeys = new ArrayList<RowSorter.SortKey>();

        int columnIndexToSort = 1;
        sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.ASCENDING));

        sorter.setSortKeys(sortKeys);
        sorter.sort();
    }

    private boolean validateFields() {
        radioyes.setActionCommand("YES");
        radiono.setActionCommand("NO");
//    if(!comoption.getSelectedItem().toString().equalsIgnoreCase("hotels"))
//    {
//        if(txttime.getText().trim().isEmpty()){
//        JOptionPane.showMessageDialog(this,"Select a Time");
//        txttime.grabFocus();
//        return false;
//    }
//    }
        if (txttime.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Select a Time");
            txttime.grabFocus();
            return false;
        }

        if (txtoption.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Select a row from Above the table");
            tblsearch.grabFocus();
            return false;

        }
        if (txtareapurpose.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter your purpose");
            txtareapurpose.grabFocus();
            return false;
        }
        if (btnreminder.getSelection() == null) {
            JOptionPane.showMessageDialog(this, "Select a bullet");
            radioyes.grabFocus();
            return false;
        }

        if (lbloption.getText() != comoption.getSelectedItem().toString()) {
            JOptionPane.showMessageDialog(this, "Select a option");
            comoption.grabFocus();
            return false;
        }
        if (comdistrict.getSelectedItem().toString().equalsIgnoreCase("select a district")) {
            JOptionPane.showMessageDialog(this, "Select a DIstrict");
            comdistrict.grabFocus();
            return false;
        }
        if (txtcalander.getCalendar() == null) {
            JOptionPane.showMessageDialog(this, "Select a Calender");
            txtcalander.grabFocus();
            return false;
        }

        return true;
    }

    private void clearFields() {
        txtcalander.setCalendar(null);
        txtareapurpose.setText("");
        txtoption.setText("");
        txttime.setText("");
        btnreminder.clearSelection();
        comdistrict.setSelectedIndex(0);
        comoption.setSelectedIndex(0);
        lbloption.setText("Option");
        int i = tblsearch.getRowCount();
        for (int j = 0; j < i; j++) {
            model1.removeRow(j);
        }

    }

    private String time_change() {
        char[] time = txttime.getText().toCharArray();
        int m = time.length;
        if (time[m - 1] == 'P') {
            time[m - 2] = '\0';
            time[m - 1] = '\0';
            int p1 = Character.getNumericValue(time[0]) * 10;
            int p2 = Character.getNumericValue(time[1]);
            int num = p1 + p2 + 12;
            String Time = Integer.toString(num) + ":" + Character.toString(time[3]) + Character.toString(time[4]);
            return Time;

        } else {
            time[m - 2] = '\0';
            time[m - 1] = '\0';
            int p1 = Character.getNumericValue(time[0]);
            int p2 = Character.getNumericValue(time[1]);
            int num = p2 + p1;
            String Time = "0" + Integer.toString(num) + ":" + Character.toString(time[3]) + Character.toString(time[4]);
            return Time;
        }

    }

    private void addData() {
        try {

            if (validateFields()) {

                SimpleDateFormat dateformat = new SimpleDateFormat("yyyy - MM - dd");
                model.insertRow(tblresult.getRowCount(), new Object[]{
                    dateformat.format(txtcalander.getDate()),
                    time_change(),
                    comdistrict.getSelectedItem().toString(),
                    comoption.getSelectedItem().toString(),
                    txtoption.getText(),
                    txtareapurpose.getText(),
                    btnreminder.getSelection().getActionCommand(),});
                JOptionPane.showMessageDialog(this, "Successfully Saved ");
                txtareapurpose.setText("");
                txtoption.setText("");
                txttime.setText("");
                btnreminder.clearSelection();
                comoption.setSelectedItem(0);
                int i = tblsearch.getRowCount();
                for (int j = 0; j < i; j++) {
                    model1.removeRow(j);
                }
                //clearFields();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void thead() {
        Color color1 = new Color(0, 102, 102);
        JTableHeader head = tblsearch.getTableHeader();
        head.setForeground(color1);
        head.setBackground(Color.WHITE);
        head.setFont(new Font("Times New Roman", Font.BOLD, 14));
        JTableHeader head1 = tblresult.getTableHeader();
        head1.setForeground(color1);
        head1.setBackground(Color.WHITE);
        head1.setFont(new Font("Times New Roman", Font.BOLD, 14));

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            //java.util.logging.Logger.getLogger(backgrounf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            //java.util.logging.Logger.getLogger(backgrounf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            //java.util.logging.Logger.getLogger(backgrounf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            //java.util.logging.Logger.getLogger(backgrounf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new myplan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private swing.buttonGradient btnclear;
    private swing.buttonGradient btnclearall;
    private swing.buttonGradient btndelete;
    private swing.buttonGradient btnmktext;
    private javax.swing.ButtonGroup btnreminder;
    private swing.buttonGradient btnsave;
    private swing.buttonGradient btnsearch;
    private swing.buttonGradient btnsendemail;
    private swing.buttonGradient btnupdate;
    private javax.swing.JComboBox<String> comdistrict;
    private javax.swing.JComboBox<String> comoption;
    private javax.swing.JPanel frameplan;
    private javax.swing.JLabel iconback;
    private javax.swing.JLabel iconhome;
    private javax.swing.JLabel iconhospitals;
    private javax.swing.JLabel iconlogo;
    private javax.swing.JLabel iconlogout;
    private javax.swing.JLabel iconplan;
    private javax.swing.JLabel iconregistration;
    private javax.swing.JLabel iconrent1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblborder;
    private javax.swing.JLabel lblbottom;
    private javax.swing.JLabel lbldate;
    private javax.swing.JLabel lblforward;
    private javax.swing.JLabel lblhead2;
    private javax.swing.JLabel lblhead3;
    private javax.swing.JLabel lblhospitals;
    private javax.swing.JLabel lbllogo;
    private javax.swing.JLabel lbllogout;
    private javax.swing.JLabel lblolanline1;
    private javax.swing.JLabel lbloption;
    private javax.swing.JLabel lblplan;
    private javax.swing.JLabel lblpurpose;
    private javax.swing.JLabel lblregistration;
    private javax.swing.JLabel lblreminder;
    private javax.swing.JLabel lblsublogo;
    private javax.swing.JLabel lbltime;
    private javax.swing.JPanel pnlback;
    private javax.swing.JPanel pnldashboard;
    private javax.swing.JPanel pnlforward;
    private javax.swing.JPanel pnlhead;
    private javax.swing.JPanel pnlhome;
    private javax.swing.JPanel pnlhospital;
    private javax.swing.JPanel pnllogout;
    private javax.swing.JPanel pnlplan;
    private javax.swing.JPanel pnlregistration;
    private javax.swing.JPanel pnlrent;
    private javax.swing.JRadioButton radiono;
    private javax.swing.JRadioButton radioyes;
    private javax.swing.JTable tblresult;
    private javax.swing.JTable tblsearch;
    private com.raven.swing.TimePicker timePicker2;
    private javax.swing.JTextArea txtareafile;
    private javax.swing.JTextArea txtareapurpose;
    private com.toedter.calendar.JDateChooser txtcalander;
    private javax.swing.JTextField txtoption;
    private javax.swing.JTextField txttime;
    // End of variables declaration//GEN-END:variables
}
